language: node_js
sudo: true
node_js:
  - lts/*
branches:
  only:
    - master    # 构建的分支
# 这里填写服务器的ip，若端口号不是22，后面要注明端口号
addons:
  ssh_known_hosts:
    - 47.103.209.220
cache:
  directories:
    - node_modules # 依赖缓存的目录
before_install:
  # 其次，-out 后面自动生成的是 ~\/.ssh/id_rsa，要把 \ 去掉，否则会编译失败
  - openssl aes-256-cbc -K $encrypted_94ff7340745c_key -iv $encrypted_94ff7340745c_iv -in deploy_rsa.enc -out ~/.ssh/deploy_rsa -d
  # 开启 ssh-agent，即允许使用 ssh 命令
  - eval "$(ssh-agent -s)"
  # 给予 id_rsa 文件权限，避免警告
  - chmod 600 ~/.ssh/deploy_rsa
  # 将私钥添加到 ssh
  - ssh-add ~/.ssh/deploy_rsa
script:
  - npm run build
  - pwd
  - ls
  - cd ./html
    # 如果是发布到自定义域名
  # echo 'www.example.com' > CNAME
  - git init
  - git add -A
  - git commit -m 'deploy'
  - git config --local user.name "zhairuihao"
  - git config --local user.email "ruihao.zhai@gmail.com"
    # 如果发布到 https://<USERNAME>.github.io
    # git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master
    # 如果发布到 https://<USERNAME>.github.io/<REPO>
    # git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages
    # 如果使用 travis 持续集成
  - git push -f https://${GITHUB_TOKEN}@github.com/zhairuihao/zhairuihao.github.io.git master
#deploy:
#  provider: pages
#  skip-cleanup: true
#  local_dir: ./html/ # 项目打包后生成的文件的目录
#  github-token: $GITHUB_TOKEN # 这里这个变量就是刚才配置 token 时填写的那个变量
#  keep-history: true
#  on:
#    branch: master # 项目源码所在的分支
after_success:
  # 登录服务器，执行部署脚本，其实最好把后面一串写成 shell 文件
  - scp -r /home/travis/build/zhairuihao/vuepress-reco/html root@47.103.209.220:/root/data/docker/nginx/html
